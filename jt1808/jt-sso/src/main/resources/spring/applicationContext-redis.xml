<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<!-- spring整合redis -->
	<!-- <bean id="jedis" class="redis.clients.jedis.Jedis">
		<constructor-arg name="host" value="${redis.host}"></constructor-arg>
		<constructor-arg name="port" value="${redis.port}"></constructor-arg>
	</bean> -->
	
	<!-- 使用redis分片的技术,实现redis操作 -->
	<!-- 1.定义配置文件 -->
	<!-- <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.MaxTotal}"></property>
		<property name="maxIdle" value="${redis.MaxIdle}"></property>
		<property name="minIdle" value="${redis.MinIdle}"></property>
	</bean> -->
	
	<!--  2.定义分片节点对象
	<bean id="info1" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg name="host" value="${redis.host}"></constructor-arg>
		<constructor-arg name="port" value="${redis.port1}"></constructor-arg>
	</bean>
	<bean id="info2" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg name="host" value="${redis.host}"></constructor-arg>
		<constructor-arg name="port" value="${redis.port2}"></constructor-arg>
	</bean>
	<bean id="info3" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg name="host" value="${redis.host}"></constructor-arg>
		<constructor-arg name="port" value="${redis.port3}"></constructor-arg>
	</bean>
	
	3.定义分片的池的对象
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg name="poolConfig" ref="poolConfig"></constructor-arg>
		<constructor-arg name="shards">
			<list>
				<ref bean="info1"/>
				<ref bean="info2"/>
				<ref bean="info3"/>
			</list>
		</constructor-arg>
	</bean> -->
	
	<!-- 2.定义jedisSentinel连接池 -->
	<!-- <bean id="jedisSentinelPool" class="redis.clients.jedis.JedisSentinelPool">
		<constructor-arg name="masterName" value="${redis.sentinel.master}"></constructor-arg>
		<constructor-arg name="sentinels">
			<set>
				<value>${redis.sentinel1}</value>
				<value>${redis.sentinel2}</value>
				<value>${redis.sentinel3}</value>
			</set>
		</constructor-arg>
		<constructor-arg name="poolConfig" ref="poolConfig"></constructor-arg>
	</bean> -->
	
	<!-- spring整合redis集群 -->
	 <!-- jedis 配置-->  
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >  
        <!--最大空闲数-->  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <!--最大建立连接等待时间-->  
        <property name="maxWaitMillis" value="${redis.maxWait}" />  
        <!--是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个-->  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
        <property name="maxTotal" value="${redis.maxTotal}" />  
        <property name="minIdle" value="${redis.minIdle}" />  
    </bean>
    
     <!--通过工厂模式获取数据  -->
    <bean id="jedisCluster" class="com.jt.common.factory.JedisClusterFactory">
    	
    	<!--引入配置文件源文件  -->
    	<property name="propertySource">
    		<value>classpath:/properties/redis.properties</value>
    	</property>
    	<!--引入池配置文件  -->
    	<property name="poolConfig" ref="poolConfig"/>
    	<!--添加配置前缀-->
    	<property name="redisNodePrefix" value="redis.cluster"/>
    </bean>
</beans>